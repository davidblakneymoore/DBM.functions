% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/Generating_Axis_Limits_for_Figures_With_Text_Function.R
\name{Generating_Axis_Limits_for_Figures_With_Text_Function}
\alias{Generating_Axis_Limits_for_Figures_With_Text_Function}
\title{Generating Axis Limits for Figures With Text}
\usage{
Generating_Axis_Limits_for_Figures_With_Text_Function(
  Points_Horizontal_Axis_Coordinates,
  Points_Vertical_Axis_Coordinates,
  Texts,
  Texts_Horizontal_Axis_Coordinates,
  Texts_Vertical_Axis_Coordinates,
  Character_Expansion = 1,
  Vertical_Text_Spacing_Constant = 1
)
}
\arguments{
\item{Points_Horizontal_Axis_Coordinates}{the numeric variables comprising the coordinates from the first ordination axis (which will become the horizontal axis).}

\item{Points_Vertical_Axis_Coordinates}{the numeric variables comprising the coordinates from the second ordination axis (which will become the vertical axis).}

\item{Texts}{the vector of loadings names.}

\item{Texts_Horizontal_Axis_Coordinates}{the values you wish to align across the vertical axes. The default for this argument is a vector of \code{0}s. This argument must be a numeric vector and it must contain the same number of elements that there are variables being aligned.}

\item{Texts_Vertical_Axis_Coordinates}{the weights assigned to each variable. To prevent certain variables from being crowded near the top or the bottom of the plot, a greater weight can be assigned to these variables, which ensures that these variables will take up more of the plotting region (at the expense of other variables, of course). The default for this argument is to assign all the variables the same weight. This argument must be a numeric vector, all the entries must be finite and nonnegative, and it must contain the same number of elements as there are variables being aligned.}

\item{Character_Expansion}{the relative sizes of the names of the loadings labels. This argument is passed to the \code{"cex"} argument of all the relevant graphing functions. The default is \code{1}. This argument must be a nonnegative number.}

\item{Vertical_Text_Spacing_Constant}{the relative amount of space vertically between the loadings labels and the tips of the loadings vectors. The default is \code{1}. Larger numbers for this argument lead to larger spacing. This argument must be a nonnegative number.}
}
\value{
This function returns the new axis limits to ensure all points and loadings labels are visible in the plotting region, and it also returns the coordinates for the loadings labels (taking into account the size of these labels).
}
\description{
This function may be used to generate nice axis limits for figures that have both points and text.
}
\details{
\code{Generating_Axis_Limits_for_Figures_With_Text_Function} generates nice axis limits for figures that have both points and text. It was designed with multidimensional ordinations in mind, where points are plotted alongside labeled loadings vectors. Occasionally, the loadings vector's labels fall outside of the plotting region or too close to the edge of the plot, and this function generates the optimal axis limits in these cases.
}
\examples{
# An Example
set.seed(16)
Number_of_Data_Points <- 50
Ordination_Data <- data.frame(Ordination_Axis_1_Coordinates = rnorm(Number_of_Data_Points), Ordination_Axis_2_Coordinates = rnorm(Number_of_Data_Points))
Number_of_Variables <- 5
Loadings <- data.frame(Variable = paste("Variable", seq_len(Number_of_Variables), sep = "_"), Ordination_Axis_1_Coordinate = rnorm(Number_of_Variables), Ordination_Axis_2_Coordinate = rnorm(Number_of_Variables))
Character_Expansion <- 1.5
Vertical_Text_Spacing_Constant <- 0.75
(Output <- Generating_Axis_Limits_for_Figures_With_Text_Function(Points_Horizontal_Axis_Coordinates = Ordination_Data$Ordination_Axis_1_Coordinates, Points_Vertical_Axis_Coordinates = Ordination_Data$Ordination_Axis_2_Coordinates, Texts = Loadings$Variable, Texts_Horizontal_Axis_Coordinates = Loadings$Ordination_Axis_1_Coordinate, Texts_Vertical_Axis_Coordinates = Loadings$Ordination_Axis_2_Coordinate, Character_Expansion = Character_Expansion, Vertical_Text_Spacing_Constant = Vertical_Text_Spacing_Constant))
par(mar = c(4, 4, 6, 2), mfrow = c(1, 3))
plot(Ordination_Data$Ordination_Axis_2_Coordinates ~ Ordination_Data$Ordination_Axis_1_Coordinates, pch = 19, xlab = "", ylab = "", main = "Figure With Default Axis Limits:\nAll Points Are Visible But The Tips\nOf Some Loading Vectors Are Not", col = 2, cex.main = 1.5) # 141:241
mtext("Ordination Axis 1", 1, line = 2.5)
mtext("Ordination Axis 2", 2, line = 2.5)
arrows(rep(0, nrow(Loadings)), rep(0, nrow(Loadings)), Loadings$Ordination_Axis_1_Coordinate, Loadings$Ordination_Axis_2_Coordinate, lwd = 1.25, length = 0.1)
text(Output$Text_Coordinate_Data_Frame$Horizontal_Axis_Coordinate, Output$Text_Coordinate_Data_Frame$Vertical_Axis_Coordinate, gsub("_", " ", Loadings$Variable), cex = Character_Expansion)
plot(c(Ordination_Data$Ordination_Axis_2_Coordinates, Loadings$Ordination_Axis_2_Coordinate) ~ c(Ordination_Data$Ordination_Axis_1_Coordinates, Loadings$Ordination_Axis_1_Coordinate), type = "n", xlab = "", ylab = "", main = "Figure With Better Axis Limits: All\nPoints And Loading Vectors Are Visible But\nSome Loading Vector Names Are Cut Off", cex.main = 1.5) # 227:343
mtext("Ordination Axis 1", 1, line = 2.5)
mtext("Ordination Axis 2", 2, line = 2.5)
points(Ordination_Data$Ordination_Axis_1_Coordinates, Ordination_Data$Ordination_Axis_2_Coordinates, pch = 19, col = 2)
arrows(rep(0, nrow(Loadings)), rep(0, nrow(Loadings)), Loadings$Ordination_Axis_1_Coordinate, Loadings$Ordination_Axis_2_Coordinate, lwd = 1.25, length = 0.1)
text(Output$Text_Coordinate_Data_Frame$Horizontal_Axis_Coordinate, Output$Text_Coordinate_Data_Frame$Vertical_Axis_Coordinate, gsub("_", " ", Loadings$Variable), cex = Character_Expansion)
plot(Ordination_Data$Ordination_Axis_2_Coordinates ~ Ordination_Data$Ordination_Axis_1_Coordinates, pch = 19, xlim = Output$Axis_Limits$Horizontal_Axis_Limits, ylim = Output$Axis_Limits$Vertical_Axis_Limits, xlab = "", ylab = "", main = "Figure With Optimized Axis Limits: All Points,\nLoading Vectors, And Loading Vector Names\nAre Visible And There Is No Wasted Space", col = 2, cex.main = 1.5) # 239:368
mtext("Ordination Axis 1", 1, line = 2.5)
mtext("Ordination Axis 2", 2, line = 2.5)
arrows(rep(0, nrow(Loadings)), rep(0, nrow(Loadings)), Loadings$Ordination_Axis_1_Coordinate, Loadings$Ordination_Axis_2_Coordinate, lwd = 1.25, length = 0.1)
text(Output$Text_Coordinate_Data_Frame$Horizontal_Axis_Coordinate, Output$Text_Coordinate_Data_Frame$Vertical_Axis_Coordinate, gsub("_", " ", Loadings$Variable), cex = Character_Expansion)

}
\author{
David B. Moore (\email{davidblakneymoore@gmail.com})
}
