% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/Attempting_to_Diagonalize_a_Matrix_Based_on_Its_Full_Diagonal.R
\name{Attempting_to_Diagonalize_a_Matrix_Based_on_Its_Full_Diagonal}
\alias{Attempting_to_Diagonalize_a_Matrix_Based_on_Its_Full_Diagonal}
\title{Attempting to Diagonalize a Matrix Based on Its Full Diagonal}
\usage{
Attempting_to_Diagonalize_a_Matrix_Based_on_Its_Full_Diagonal(Matrix)
}
\arguments{
\item{Matrix}{the matrix for which an attempt will be made to diagonalize based on the full (not the main) diagonal.}
}
\value{
This function returns the optimally ordered matrix which has been roughly diagonalized (\code{Optimally_Reordered_Matrix}), the original matrix (\code{Original_Matrix}), and a template matrix showing the relative proximities between each entry and the full diagonal, where larger values represent proximity to the full diagonal and smaller values represent distance from the full diagonal (\code{Template_Matrix}).
}
\description{
This function performs row and column exchanges on a matrix and generates the matrix that is optimally diagonalized based on its full diagonal (not its main diagonal). The resulting matrix has its greatest values near the full diagonal and its least values as far as possible from the full diagonal. This function is useful for generating bipartite interaction matrix visualizations, such as ones created by the 'bipartite::plotweb()' function. In the case of these bipartite interaction matrix visualizations, attempting to diagonalizwe the matrix of interactions between the higher and lower trophic levels (based on the full, not the main, diagonal) will allow for figures with the least amount of crossing edges.
}
\details{
\code{Attempting_to_Diagonalize_a_Matrix_Based_on_Its_Full_Diagonal} performs row and column exchanges on a matrix and generates the matrix that is optimally diagonalized based on its full diagonal (not its main diagonal). The resulting matrix has its greatest values near the full diagonal and its least values as far as possible from the full diagonal. This function is useful for generating bipartite interaction matrix visualizations, such as ones created by the 'bipartite::plotweb()' function. In the case of these bipartite interaction matrix visualizations, attempting to diagonalizwe the matrix of interactions between the higher and lower trophic levels (based on the full, not the main, diagonal) will allow for figures with the least amount of crossing edges.

This function should be used with numeric matrices that only contain nonnegative entries and that do not contain any missing values.

For large matrices, this function may take an extremely long time to run because it performs all possible row and column exchanges and chooses the one that most closely matches the \code{Template_Matrix}.

This function relies on another function from the \code{DBM.functions} package - the \link[DBM.functions]{Finding_the_Full_Diagonal_of_a_Matrix} function - as well as the \link[gtools]{permutations} function from the \code{gtools} package.
}
\examples{
Matrix_10 <- matrix(rchisq(24, 5), ncol = 4)
Attempting_to_Diagonalize_a_Matrix_Based_on_Its_Full_Diagonal(Matrix_10)

}
\author{
David B. Moore (\email{davidblakneymoore@gmail.com})
}
