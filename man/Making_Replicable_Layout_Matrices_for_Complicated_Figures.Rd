% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/Making_Replicable_Layout_Matrices_for_Complicated_Figures.R
\name{Making_Replicable_Layout_Matrices_for_Complicated_Figures}
\alias{Making_Replicable_Layout_Matrices_for_Complicated_Figures}
\title{Making Replicable Layout Matrices for Complicated Figures}
\usage{
Making_Replicable_Layout_Matrices_for_Complicated_Figures(
  Individual_Layout_Matrix,
  Overall_Layout_Matrix
)
}
\arguments{
\item{Individual_Layout_Matrix}{the layout matrix for each individual figure that is to be replicated.}

\item{Overall_Layout_Matrix}{the layout matrix depicting how each individual figure is to be replicated.}
}
\value{
This function returns a layout matrix that replicated smaller layout matrices to allow for complex figures to be plotted.
}
\description{
This function is to be used when creating a plotting layout matrix where each plot in this layout matrix is itself comprised of multiple plots that were themselves created using a layout matrix. In other words, it's used when a figure comprised of multiple plots is itself to be replicated to create a more complex figure.
}
\details{
\code{Making_Replicable_Layout_Matrices_for_Complicated_Figures} is to be used when creating a plotting layout matrix where each plot in this layout matrix is itself comprised of multiple plots that were themselves created using a layout matrix. In other words, it's used when a figure comprised of multiple plots is itself to be replicated to create a more complex figure.

This function relies on the \link[DBM.functions]{Checking_Layout_Matrix_Viability} function, which is also found in the \code{DBM.functions} package.
}
\examples{
Individual_Layout_Matrix <- matrix(c(1, 1, 2, 3), byrow = T, ncol = 2)
Overall_Layout_Matrix <- matrix(c(0, 1, 1, 0, 2, 2, 3, 3), byrow = T, ncol = 4)
(Layout_Matrix <- Making_Replicable_Layout_Matrices_for_Complicated_Figures(Individual_Layout_Matrix, Overall_Layout_Matrix))
layout(Layout_Matrix, heights = rep(c(0.15, 0.85), 2))
lapply(unique(iris$Species), function (x) {
  par(mar = c(1, 1, 3, 1))
  plot(0, type = "n", axes = F, xlab = "", ylab = "", xlim = c(-1, 1), ylim = c(-1, 1))
  text(0, 0, paste0("Species: ", as.character(x)), cex = 2.5, xpd = T)
  par(mar = c(5, 4, 4, 2) + 0.1)
  plot(Sepal.Width ~ Sepal.Length, iris[which(iris$Species == x), ], xlab = "Sepal Length", ylab = "Sepal Width")
  plot(Petal.Width ~ Petal.Length, iris[which(iris$Species == x), ], xlab = "Petal Length", ylab = "Petal Width")
})

}
\author{
David B. Moore (\email{davidblakneymoore@gmail.com})
}
